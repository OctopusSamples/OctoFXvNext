@using OctoFX.Core.Model
@model OctoFX.TradingWebsite.Models.QuoteModel

@{
  ViewData["Title"] = "Get a quote";
}

<hgroup class="title">
  <h1>@ViewData["Title"].</h1>
</hgroup>

<form asp-controller="Deal" asp-action="Quote" method="post" role="form" asp-anti-forgery="true">
	<div asp-validation-summary="ValidationSummary.All"></div>

  <div class="panel panel-default">
    <div class="panel-heading">
      <h3 class="panel-title">Spot quote</h3>
    </div>
    <div class="panel-body">
      <div class="form-horizontal">

        <div class="form-group">
			<label asp-for="SellCurrency" class="col-sm-2 control-label">I have (sell):</label>
          <div class="col-sm-2">
			  <select asp-for="@(Model.SellCurrency)" asp-items="@((IEnumerable<SelectListItem>)OctoFX.Core.Model.Currency.AllSupportedCurrencies.Select(a => new SelectListItem { Text = a.IsoCurrencyCode, Value = a.IsoCurrencyCode }))" class="form-control"></select>
          </div>
          <div class="col-sm-4">
			  <input asp-for="QuantityToSell" class="form-control" placeholder="1,300.00" />
			  <span asp-validation-for="QuantityToSell"></span>
			  <span asp-validation-for="SellCurrency"></span>
          </div>
        </div>
        
        <div class="form-group">
			<label asp-for="BuyCurrency" class="col-sm-2 control-label">I want (buy):</label>
          <div class="col-sm-2">
			  <select asp-for="@(Model.BuyCurrency)" asp-items="@((IEnumerable<SelectListItem>)OctoFX.Core.Model.Currency.AllSupportedCurrencies.Select(a => new SelectListItem { Text = a.IsoCurrencyCode, Value = a.IsoCurrencyCode }))" class="form-control"></select>
			  <span asp-validation-for="BuyCurrency"></span>
          </div>
        </div>


        <div class="form-group">
          <div class="col-sm-offset-2 col-sm-10">
            <button type="submit" class="btn btn-primary">Get quote</button>
          </div>
        </div>

      </div>
    </div>
  </div>
</form>